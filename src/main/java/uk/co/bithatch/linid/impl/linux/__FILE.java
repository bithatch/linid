/*
 * Copyright © 2025 Bithatch (tanktarta@gmail.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the “Software”), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies
 * or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
// Generated by jextract

package uk.co.bithatch.linid.impl.linux;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * typedef struct _IO_FILE {
 *     int _flags;
 *     char *_IO_read_ptr;
 *     char *_IO_read_end;
 *     char *_IO_read_base;
 *     char *_IO_write_base;
 *     char *_IO_write_ptr;
 *     char *_IO_write_end;
 *     char *_IO_buf_base;
 *     char *_IO_buf_end;
 *     char *_IO_save_base;
 *     char *_IO_backup_base;
 *     char *_IO_save_end;
 *     struct _IO_marker *_markers;
 *     struct _IO_FILE *_chain;
 *     int _fileno;
 *     int _flags2;
 *     __off_t _old_offset;
 *     unsigned short _cur_column;
 *     signed char _vtable_offset;
 *     char _shortbuf[1];
 *     _IO_lock_t *_lock;
 *     __off64_t _offset;
 *     struct _IO_codecvt *_codecvt;
 *     struct _IO_wide_data *_wide_data;
 *     struct _IO_FILE *_freeres_list;
 *     void *_freeres_buf;
 *     size_t __pad5;
 *     int _mode;
 *     char _unused2[20];
 * } __FILE
 * }
 */
public class __FILE extends _IO_FILE {

    __FILE() {
        // Should not be called directly
    }
}

